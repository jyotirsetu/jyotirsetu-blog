---
import Logo from './JyotirsetuBlogLogo.astro';
import ToggleTheme from './JyotirsetuBlogToggleTheme.astro';
import ToggleMenu from './JyotirsetuBlogToggleMenu.astro';
import Button from './JyotirsetuBlogButton.astro';
import type { CallToAction } from '../types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<CallToAction>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = true,
  showRssFeed = false,
  position = 'center',
} = Astro.props;

const currentPath = Astro.url.pathname;

// Main website navigation links (matching jyotirsetu.com)
const mainWebsiteLinks = [
  {
    text: 'Home',
    href: 'https://www.jyotirsetu.com/',
  },
  {
    text: 'About',
    href: 'https://www.jyotirsetu.com/about',
  },
  {
    text: 'Services',
    links: [
      { text: 'Kundli Analysis', href: 'https://www.jyotirsetu.com/services/kundli-analysis' },
      { text: 'Palmistry', href: 'https://www.jyotirsetu.com/services/palmistry' },
      { text: 'Matchmaking (Kundli Milan)', href: 'https://www.jyotirsetu.com/services/matchmaking' },
      { text: 'Numerology', href: 'https://www.jyotirsetu.com/services/numerology' },
      { text: 'Gemstone Consultation', href: 'https://www.jyotirsetu.com/services/gemstone-consultation' },
      { text: 'Career & Finance Guidance', href: 'https://www.jyotirsetu.com/services/career-finance' },
      { text: 'Spiritual Guidance', href: 'https://www.jyotirsetu.com/services/spiritual-guidance' },
      { text: 'Remedial Solutions', href: 'https://www.jyotirsetu.com/services/remedial-solutions' },
      { text: 'Dosha Analysis & Remedies', href: 'https://www.jyotirsetu.com/services/dosha-analysis' },
    ],
  },
  {
    text: 'Blog',
    href: '/blog',
  },
  {
    text: 'Testimonials',
    href: 'https://www.jyotirsetu.com/testimonials',
  },
  {
    text: 'Contact',
    href: 'https://www.jyotirsetu.com/contact',
  },
];

const mainWebsiteActions = [
  {
    text: 'Book Consultation',
    href: 'https://www.jyotirsetu.com/contact',
    target: '_blank',
    variant: 'primary' as const,
  },
];
---

<header
  class:list={[
    { 'fixed top-0': isSticky, relative: !isSticky, dark: isDark },
    'z-40 flex-none mx-auto w-full border-b border-gray-200 dark:border-gray-700 transition-[opacity] ease-in-out bg-white dark:bg-gray-900 shadow-sm overflow-visible',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative text-gray-900 dark:text-white py-3 px-3 md:px-6 mx-auto w-full',
      {
        'md:flex md:justify-between': position !== 'center',
      },
      {
        'md:grid md:grid-cols-3 md:items-center': position === 'center',
      },
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div class:list={[{ 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' }, 'flex justify-between']}>
      <Logo />
      <!-- Mobile Header Buttons - Always Visible -->
      <div class="flex items-center md:hidden">
        <div class="flex items-center mr-2">
          {showToggleTheme && <ToggleTheme iconClass="w-6 h-6" />}
          <!-- Call Icon -->
          <a
            href="tel:+919266991298"
            class="text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center ml-2"
            aria-label="Call Us"
            title="Call +91 9266991298"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
            </svg>
          </a>
        </div>
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto hidden md:flex md:mx-5 text-gray-900 dark:text-white overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:justify-self-center"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium md:justify-center"
      >
        {
          mainWebsiteLinks.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ? (
                <>
                  <button
                    type="button"
                    class="text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 px-4 py-3 flex items-center whitespace-nowrap transition-colors duration-200"
                  >
                    {text}{' '}
                    <svg class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                  </button>
                  <ul class="dropdown-menu hidden">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            'first:rounded-t last:rounded-b md:hover:bg-gray-100 text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 dark:hover:bg-gray-700 py-2 px-5 block whitespace-no-wrap transition-colors duration-200',
                            { 'text-blue-600 dark:text-blue-400 font-semibold': href2 === currentPath },
                          ]}
                          href={href2}
                          target={href2.startsWith('http') ? '_blank' : '_self'}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    'text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 px-4 py-3 flex items-center whitespace-nowrap transition-colors duration-200',
                    { 'text-blue-600 dark:text-blue-400 font-semibold': href === currentPath },
                  ]}
                  href={href}
                  target={href.startsWith('http') ? '_blank' : '_self'}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    
    <!-- Mobile Menu -->
    <div class="mobile-menu md:hidden hidden">
      <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700">
        {
          mainWebsiteLinks.map(({ text, href, links }) => (
            <div>
              {links?.length ? (
                <div class="dropdown">
                  <button
                    type="button"
                    class="w-full text-left text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 px-3 py-2 rounded-md text-base font-medium flex items-center justify-between transition-colors duration-200"
                  >
                    {text}
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                  </button>
                  <div class="dropdown-menu hidden pl-4 space-y-1">
                    {links.map(({ text: text2, href: href2 }) => (
                      <a
                        class="block px-3 py-2 rounded-md text-sm font-medium text-gray-600 dark:text-gray-300 hover:text-link dark:hover:text-white"
                        href={href2}
                        target={href2.startsWith('http') ? '_blank' : '_self'}
                      >
                        {text2}
                      </a>
                    ))}
                  </div>
                </div>
              ) : (
                <a
                  class="text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 px-3 py-2 rounded-md text-base font-medium block transition-colors duration-200"
                  href={href}
                  target={href.startsWith('http') ? '_blank' : '_self'}
                >
                  {text}
                </a>
              )}
            </div>
          ))
        }
      </div>
    </div>
    
    <div
      class:list={[
        { 'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left' },
        'hidden md:self-center md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0 md:justify-self-end',
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        <div class="flex">
          {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block" />}
          {
            showRssFeed && (
              <a
                class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                aria-label="RSS Feed"
                href="/rss.xml"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 5c7.18 0 13 5.82 13 13M6 11a7 7 0 017 7m-6 0a1 1 0 11-2 0 1 1 0 012 0z"></path>
                </svg>
              </a>
            )
          }
          <!-- Call Icon - Desktop Only -->
          <a
            href="tel:+919266991298"
            class="text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 items-center ml-2 hidden md:inline-flex"
            aria-label="Call Us"
            title="Call +91 9266991298"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
            </svg>
          </a>
        </div>
        {
          mainWebsiteActions?.length ? (
            <span class="ml-4 rtl:ml-0 rtl:mr-4">
              {mainWebsiteActions.map((btnProps) => (
                <Button {...btnProps} class="ml-2 py-2.5 px-5.5 md:px-6 font-semibold shadow-none text-sm w-auto" />
              ))}
            </span>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</header>
