---
export interface Props {
  text?: string;
  href?: string;
  target?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  disabled?: boolean;
  type?: 'button' | 'submit' | 'reset';
}

const {
  text = '',
  href,
  target,
  variant = 'primary',
  size = 'md',
  class: className = '',
  disabled = false,
  type = 'button',
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-medium rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';

const variantClasses = {
  primary: 'bg-blue-600 hover:bg-blue-700 text-white focus:ring-blue-500 shadow-lg hover:shadow-xl',
  secondary: 'bg-gray-600 hover:bg-gray-700 text-white focus:ring-gray-500',
  outline: 'border-2 border-blue-600 text-blue-600 hover:bg-blue-600 hover:text-white focus:ring-blue-500',
};

const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-sm',
  lg: 'px-6 py-3 text-base',
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;
---

{href ? (
  <a
    href={href}
    target={target}
    class={classes}
    {...disabled ? { 'aria-disabled': 'true' } : {}}
  >
    {text}
  </a>
) : (
  <button
    type={type}
    class={classes}
    disabled={disabled}
  >
    {text}
  </button>
)}
